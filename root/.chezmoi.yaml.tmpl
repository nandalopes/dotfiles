{{- /* DATA NOT AVAILABLE ON INIT */ -}}
{{- $data := joinPath .chezmoi.workingTree "root/.chezmoidata" "color.yaml" | include | fromYaml -}}

{{- $colorList := keys $data.color | sortAlpha -}}
{{- $color := dig "param" "color" "dracula" . -}}
{{- $i := 0 -}}
{{- $supportedColors := list -}}
{{- range $c := $colorList -}}
{{-   $i = add1 $i -}}
{{-   $supportedColors = printf "%d-%s" $i $c | append $supportedColors -}}
{{-   if eq $color $c -}}
{{-     $color = printf "%d-%s" $i $c -}}
{{-   end -}}
{{- end -}}

{{- /* Checks if running interactively, which is not the case for GitHub Codespaces */ -}}
{{- $interactive := and stdinIsATTY (env "ACT" | not) (env "CODESPACES" | not)
                    (env "DEBIAN_FRONTEND" | ne "noninteractive")
  -}}
{{- /* END DATA NOT AVAILABLE */ -}}


{{- /* Initializes variables with a default value */ -}}
{{- $name  := "Your Name" -}}
{{- $email := "your@email.com" -}}
{{- $whatGUI := "gtk" -}}
{{- if (expandenv "$XDG_CURRENT_DESKTOP" | regexMatch `(LXQt|KDE)`) -}}
{{-   $whatGUI = "qt" -}}
{{- end -}}

{{- /* From https://www.chezmoi.io/user-guide/machines/general/ */ -}}
{{- $chassisType := "desktop" -}}
{{- if (eq .chezmoi.os "darwin") -}}
{{-   if contains "MacBook" (output "sysctl" "-n" "hw.model") -}}
{{-     $chassisType = "laptop" -}}
{{-   else -}}
{{-     $chassisType = "desktop" -}}
{{-   end -}}
{{- else if (eq .chezmoi.os "linux") -}}
{{-   if $interactive -}}
{{-     if contains "laptop" (output "hostnamectl") -}}
{{-       $chassisType = "laptop" -}}
{{-     else -}}
{{-       $chassisType = "desktop" -}}
{{-     end -}}
{{-   end -}}
{{- else if (eq .chezmoi.os "windows") -}}
{{-   $chassisType = (output "powershell.exe" "-noprofile" "-command" "if (Get-WmiObject -Class win32_battery -ComputerName localhost) { echo laptop } else { echo desktop }") -}}
{{- end -}}

{{- /* Otherwise, if running interactively, prompts for values */ -}}
{{- if $interactive -}}
{{-   writeToStdout "ðŸ’¡ Tip: you can re-enter your name and email with `chezmoi init --data=false`.\n" -}}
{{-   $name  = promptStringOnce . "name" "Name used in gitconfig" $name -}}
{{-   $email = promptStringOnce . "email" "Email used in gitconfig" $email -}}
{{-   $color = promptChoiceOnce . "param.color" "color theme" $supportedColors $color -}}
{{- end -}}



---
workingTree: {{ quote .chezmoi.workingTree }}
sourceDir: {{ joinPath .chezmoi.workingTree "root" | quote }}


data:
  name: {{ quote $name }}
  email: {{ quote $email }}
  param:
    color: {{ regexReplaceAll "[0-9]-" $color "" | quote }}
{{
    join ", " $colorList |
    printf "Choose any of %s" |
    wrap 50 | comment "    # "
}}
    interactive: {{ $interactive }}
    monitor: {{ quote $chassisType }}
    what_gui: {{ quote $whatGUI }}
  app_sets:
    desktop: {{ $interactive }}
    fixes: false
    gamer: false
    movies: false
    music: false
    space: false
    teacher: false
    writer: false
    me: false


scriptEnv:
  FIRST_INSTALL: "1"


# status:
#   exclude:
#     - "always"


# diff:
#   exclude:
#     - "always"


# edit:
#   command: "gvim"
#   # valid vim/neovim args
#   args:
#     - "-f"
#     - "-p"


# merge:
#   command: "gvim"
#   args:
#     - "-d"
#     - "-o"
#     - "{{ `{{` }} .Destination {{ `}}` }}"
#     - "{{ `{{` }} .Source {{ `}}` }}"
#     - "{{ `{{` }} .Target {{ `}}` }}"


# encryption: gpg
# gpg:
#   recipient: "YOUR-GPG-KEY"
#   args:
#     - "--quiet"
#     - "--homedir=/media/{{ .chezmoi.username }}/path/to/.gnupg"


format: yaml
mode: file
verbose: true


# umask: 0o022

{{- /*
  vim:ft=yaml.gotmpl:
*/}}
